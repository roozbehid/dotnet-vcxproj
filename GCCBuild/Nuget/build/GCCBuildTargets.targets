<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" TreatAsLocalProperty="Platform">
   <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)\\..\\lib\\netstandard2.0\\GCCBuild.dll" TaskName="CCompilerTask"/>
   <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)\\..\\lib\\netstandard2.0\\GCCBuild.dll" TaskName="CLinkerTask"/>
   <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)\\..\\lib\\netstandard2.0\\GCCBuild.dll" TaskName="CArchiverTask"/>

  <PropertyGroup Condition="'$(VCTargetsPath)' == '.' OR '$(VCTargetsPath)' == '.\' OR '$(VCTargetsPath)' == './'">
    <StupidSetting>true</StupidSetting>

    <MSBuildAllProjects Condition="Exists('$(MSBuildProjectFullPath).user')">$(MSBuildAllProjects);$(MSBuildProjectFullPath).user</MSBuildAllProjects>

    <_OriginalConfiguration>$(Configuration)</_OriginalConfiguration>
    <_OriginalPlatform>$(Platform)</_OriginalPlatform>
    <_OriginalApplicationType>$(ApplicationType)</_OriginalApplicationType>

    <Configuration Condition="'$(Configuration)' == '' and '$(OS)'!='Unix'">Debug</Configuration>
    <Configuration Condition="'$(Configuration)' == '' and '$(OS)'=='Unix'">LinuxDebug</Configuration>
    <ConfigurationType Condition="'$(ConfigurationType)' == ''">Application</ConfigurationType>
    <ConfigurationName Condition=" '$(ConfigurationName)' == '' ">$(Configuration)</ConfigurationName>

    <Platform Condition="'$(Platform)' == ''">Win32</Platform>
    <Platform Condition="'$(Platform)' == 'x86' or '$(Platform)' == 'Any CPU' or '$(Platform)' == 'AnyCPU'">Win32</Platform>
    <Platform Condition="'$(Platform)' == 'Win32' and '$(OS)' == 'Unix'">x86</Platform>

    <ProjectName Condition=" '$(ProjectName)' == '' ">$(MSBuildProjectName)</ProjectName>
    <ProjectFileName Condition=" '$(ProjectFileName)' == '' ">$(MSBuildProjectFile)</ProjectFileName>
    <ProjectExt Condition=" '$(ProjectExt)' == '' ">$(MSBuildProjectExtension)</ProjectExt>

    <ProjectDir Condition=" '$(ProjectDir)' == '' ">$(MSBuildProjectDirectory)\</ProjectDir>
    <ProjectPath Condition=" '$(ProjectPath)' == '' ">$(ProjectDir)$(ProjectFileName)</ProjectPath>
    <PlatformName Condition=" '$(PlatformName)' == '' ">$(Platform)</PlatformName>
    <SolutionDir Condition="'$(SolutionDir)'==''">$(ProjectDir)</SolutionDir>

    <AssemblyName Condition=" '$(AssemblyName)'=='' ">$(MSBuildProjectName)</AssemblyName>

    <OutputType Condition=" '$(TargetType)' != ''">$(TargetType)</OutputType>
    <OutputType Condition=" '$(TargetType)' == 'Container' or '$(TargetType)' == 'DocumentContainer' ">library</OutputType>
    <OutputType Condition=" '$(OutputType)' == '' ">exe</OutputType>

    <IntDir Condition="'$(IntDir)'=='' AND '$(IntermediateOutputPath)'!=''">$(IntermediateOutputPath)</IntDir>
    <IntDir Condition="'$(IntDir)'=='' AND '$(IntermediateOutputPath)'==''">$(ProjectDir)obj\$(Platform)\$(Configuration)\</IntDir>
    <OutDir Condition="'$(OutDir)'=='' AND '$(ProjectDir)' == ''">$(IntDir)</OutDir>
    <OutDir Condition="'$(OutDir)'=='' AND '$(ProjectDir)' != ''">$(ProjectDir)\$(Platform)\$(Configuration)\</OutDir>
    <OutputPath>$(OutDir)</OutputPath>

    <GCCToolCompilerStyle Condition="'$(GCCToolCompilerStyle)' == '' AND $(Configuration.Contains('Wasm'))">clang</GCCToolCompilerStyle>
    <GCCToolCompilerStyle Condition="'$(GCCToolCompilerStyle)' == ''">gnu</GCCToolCompilerStyle>
    <GCCToolLinkerStyle Condition="'$(GCCToolLinkerStyle)' == ''">$(GCCToolCompilerStyle)</GCCToolLinkerStyle>
    <GCCToolArchiverStyle Condition="'$(GCCToolArchiverStyle)' == ''">$(GCCToolCompilerStyle)</GCCToolArchiverStyle>
    
    <GCCToolCompilerExe Condition="'$(GCCToolCompilerExe)' == '' AND '$(GCCToolCompilerStyle)' == 'gnu' AND $(Configuration.Contains('Linux'))">g++</GCCToolCompilerExe>
    <GCCToolCompilerExe Condition="'$(GCCToolCompilerExe)' == '' AND '$(GCCToolCompilerStyle)' == 'llvm' AND $(Configuration.Contains('Linux'))">clang</GCCToolCompilerExe>
    <GCCToolCompilerExe Condition="'$(GCCToolCompilerExe)' == '' AND $(Configuration.Contains('Wasm')) AND '$(OS)' == 'Windows_NT'">emcc.bat</GCCToolCompilerExe>
    <GCCToolCompilerExe Condition="'$(GCCToolCompilerExe)' == '' AND $(Configuration.Contains('Wasm')) AND '$(OS)' == 'Unix'">emcc</GCCToolCompilerExe>
    <GCCToolCompilerExe Condition="'$(GCCToolCompilerExe)' == ''">g++</GCCToolCompilerExe>

    <GCCToolLinkerExe Condition="'$(GCCToolLinkerExe)' == '' AND '$(GCCToolCompilerStyle)' == 'gnu' AND $(Configuration.Contains('Linux'))">g++</GCCToolLinkerExe>
    <GCCToolLinkerExe Condition="'$(GCCToolLinkerExe)' == '' AND '$(GCCToolCompilerStyle)' == 'llvm' AND $(Configuration.Contains('Linux'))">clang</GCCToolLinkerExe>
    <GCCToolLinkerExe Condition="'$(GCCToolLinkerExe)' == '' AND $(Configuration.Contains('Wasm')) AND '$(OS)' == 'Windows_NT'">emcc.bat</GCCToolLinkerExe>
    <GCCToolLinkerExe Condition="'$(GCCToolLinkerExe)' == '' AND $(Configuration.Contains('Wasm')) AND '$(OS)' == 'Unix'">emcc</GCCToolLinkerExe>
    <GCCToolLinkerExe Condition="'$(GCCToolLinkerExe)' == ''">g++</GCCToolLinkerExe>
    <GCCToolLinkerPath Condition="'$(GCCToolLinkerPath)' == ''">$(GCCToolCompilerPath)</GCCToolLinkerPath>

    <GCCToolArchiverExe Condition="'$(GCCToolArchiverExe)' == '' AND '$(GCCToolCompilerStyle)' == 'gnu' AND $(Configuration.Contains('Linux'))">gcc-ar</GCCToolArchiverExe>
    <GCCToolArchiverExe Condition="'$(GCCToolArchiverExe)' == '' AND '$(GCCToolCompilerStyle)' == 'llvm' AND $(Configuration.Contains('Linux'))">llvm-ar</GCCToolArchiverExe>
    <GCCToolArchiverExe Condition="'$(GCCToolArchiverExe)' == '' AND $(Configuration.Contains('Wasm')) AND '$(OS)' == 'Windows_NT'">emar.bat</GCCToolArchiverExe>
    <GCCToolArchiverExe Condition="'$(GCCToolArchiverExe)' == '' AND $(Configuration.Contains('Wasm')) AND '$(OS)' == 'Unix'">emar</GCCToolArchiverExe>
    <GCCToolArchiverExe Condition="'$(GCCToolArchiverExe)' == ''">ar</GCCToolArchiverExe>
    <GCCToolArchiverPath Condition="'$(GCCToolArchiverPath)' == ''">$(GCCToolCompilerPath)</GCCToolArchiverPath>

    <GCCBuild_PreRunApp Condition="'$(GCCBuild_PreRunApp)' == '' AND $(Configuration.Contains('Wasm')) AND '$(OS)' == 'Windows_NT'">call emsdk_env.bat 1>nul 2>nul</GCCBuild_PreRunApp>

    <GCCToolSupportsResponsefile Condition="'$(GCCToolSupportsResponsefile)' == ''">true</GCCToolSupportsResponsefile>
    
    <!-- compatibility -->
    <GCCBuild_SubSystem Condition="'$(GCCBuild_UseWSL)'=='true'">WSL</GCCBuild_SubSystem>
    <GCCBuild_ShellApp Condition="'$(GCCBuild_WSLApp)' != ''">$(GCCBuild_WSLApp)</GCCBuild_ShellApp>
    <!-- compatibility -->
    
    <GCCBuild_ShellApp Condition="'$(GCCBuild_ShellApp)'=='' AND '$(GCCBuild_SubSystem)'=='WSL'">wsl.exe</GCCBuild_ShellApp>
    <GCCBuild_SubSystem Condition="'$(GCCBuild_SubSystem)'=='' AND '$(GCCBuild_ShellApp)'=='wsl.exe'">WSL</GCCBuild_SubSystem>
    
    <GCCBuild_ConvertPath Condition="'$(GCCBuild_SubSystem)'=='WSL'">true</GCCBuild_ConvertPath>
    <GCCBuild_ConvertPath Condition="'$(GCCBuild_SubSystem)'=='Cygwin'">true</GCCBuild_ConvertPath>
    <GCCBuild_ConvertPath Condition="'$(GCCBuild_ConvertPath)'==''">false</GCCBuild_ConvertPath>

    <GCCBuild_ConvertPath_mntFolder Condition="'$(GCCBuild_ConvertPath_mntFolder)' == '' AND '$(GCCBuild_SubSystem)' == 'WSL'">/mnt/</GCCBuild_ConvertPath_mntFolder>
    <GCCBuild_ConvertPath_mntFolder Condition="'$(GCCBuild_ConvertPath_mntFolder)' == '' AND '$(GCCBuild_SubSystem)' == 'Cygwin'">/cygdrive/</GCCBuild_ConvertPath_mntFolder>
    
    <VCTargetsPath Condition="'$(VCTargetsPath)' == '.' OR '$(VCTargetsPath)' == '.\' OR '$(VCTargetsPath)' == './'">$(MSBuildThisFileDirectory)</VCTargetsPath>
    <_GCCEnv>true</_GCCEnv>

</PropertyGroup>

  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" Condition="'$(_GCCEnv)' == 'true'"/>
  <Import Project="$(MSBuildThisFileDirectory)DebuggerSupport.targets" Condition="'$(DesignTimeBuild)'=='true'"/>
  <Import Project="$(MSBuildThisFileDirectory)\GCCBuild.CppClean.targets" Condition="'$(_GCCEnv)' == 'true'"/>
  
</Project>

