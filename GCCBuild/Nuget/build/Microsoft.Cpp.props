<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Default values -->
  <PropertyGroup>
    <TargetOS>$(OS)</TargetOS>
    <TargetOS Condition="'$(GCCBuild_SubSystem)' == 'WSL'">Unix</TargetOS>
    <TargetOS Condition="'$(GCCBuild_ShellApp)' == 'wsl.exe'">Unix</TargetOS>
    <TargetOS Condition="$(Configuration.Contains('Emscripten')) OR $(Configuration.Contains('Wasm'))">WebAssembly</TargetOS>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ConfigurationType)' == 'Application'">
    <LinkCompiled>true</LinkCompiled>
    <TargetName Condition="'$(TargetName)' == ''">$(ProjectName)</TargetName>
    <OutputType>exe</OutputType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ConfigurationType)' == 'DynamicLibrary'" >
    <LinkCompiled>true</LinkCompiled>
    <TargetName Condition="'$(TargetName)' == ''">$(ProjectName)</TargetName>
    <TargetExt>.dll</TargetExt>
    <OutputType>library</OutputType>
  </PropertyGroup>

   <PropertyGroup Condition="'$(ConfigurationType)' == 'StaticLibrary'">
    <LibCompiled>true</LibCompiled>
    <TargetName Condition="'$(TargetName)' == ''">$(ProjectName)</TargetName>
    <TargetExt>.lib</TargetExt>
    <OutputType>staticlibrary</OutputType>
  </PropertyGroup>

  
  <PropertyGroup Condition="'$(ConfigurationType)' == 'Application' and '$(TargetOS)' == 'Unix'">
    <TargetExt>.out</TargetExt>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ConfigurationType)' == 'DynamicLibrary' and '$(TargetOS)' == 'Unix'" >
    <TargetName>lib$(ProjectName)</TargetName>
    <TargetExt>.so</TargetExt>
  </PropertyGroup>

   <PropertyGroup Condition="'$(ConfigurationType)' == 'StaticLibrary' and '$(TargetOS)' == 'Unix'">
    <TargetName>lib$(ProjectName)</TargetName>
    <TargetExt>.a</TargetExt>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ConfigurationType)' == 'Application' and '$(TargetOS)' == 'WebAssembly'">
    <TargetExt>.html</TargetExt>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ConfigurationType)' == 'DynamicLibrary' and '$(TargetOS)' == 'WebAssembly'" >
    <TargetName>lib$(ProjectName)</TargetName>
    <TargetExt>.bc</TargetExt>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ConfigurationType)' == 'StaticLibrary' and '$(TargetOS)' == 'WebAssembly'">
    <TargetName>lib$(ProjectName)</TargetName>
    <TargetExt>.a</TargetExt>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <GCCToolCompiler_Flags>
        <AfterFlagSeperator></AfterFlagSeperator>
    </GCCToolCompiler_Flags>
  </ItemDefinitionGroup>

  <!-- gnu Command Lines-->
  
  <ItemGroup Condition="'$(GCCToolCompilerStyle)' == 'gnu'">
    <GCCToolCompiler_Flags Include="Defaults">
      <Flag>-fmax-errors=1000</Flag>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="ConfigurationType">
      <MappingVariable>ConfigurationType</MappingVariable>
      <DynamicLibrary>-fPIC</DynamicLibrary>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Preprocessor">
      <MappingVariable>PreprocessorDefinitions</MappingVariable>
      <Flag>-D@{;}</Flag>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="AdditionalOptions">
      <MappingVariable>AdditionalOptions</MappingVariable>
      <Flag>@{}</Flag>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Optimization">
      <MappingVariable>Optimization</MappingVariable>
      <Disabled></Disabled>
      <MinSpace>-Oz</MinSpace>
      <MaxSpeed>-O2</MaxSpeed>
      <Full>-O3</Full>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="DebugInfo">
      <MappingVariable>DebugInformationFormat</MappingVariable>
      <IsNullOrEmpty>-g2 -gdwarf-2</IsNullOrEmpty>
      <None>-g0</None>
      <OldStyle>-g1</OldStyle>
      <OTHER>-g2 -gdwarf-2</OTHER>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="CompileAs">
      <MappingVariable>CompileAs</MappingVariable>
      <Flag></Flag>
      <CompileAsCpp>-x c++</CompileAsCpp>
      <CompileAsC>-x c</CompileAsC>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Conformance">
      <MappingVariable>ConformanceMode</MappingVariable>
      <Flag></Flag>
      <true>-fpermissive</true>
      <false></false>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Warnings">
      <MappingVariable>WarningLevel</MappingVariable>
      <Flag></Flag>
      <TurnOffAllWarnings>-w</TurnOffAllWarnings>
      <Level1>-Wall -Wno-comment -Wno-parentheses -Wno-missing-braces -Wno-write-strings -Wno-unknown-pragmas -Wno-attributes -Wformat=0</Level1>
      <Level2>-Wall -Wno-comment -Wno-parentheses -Wno-missing-braces -Wno-write-strings -Wno-unknown-pragmas -Wno-attributes -Wformat=0</Level2>
      <Level3>-Wall -Wno-comment -Wno-parentheses -Wno-missing-braces -Wno-write-strings -Wno-unknown-pragmas -Wno-attributes</Level3>
      <Level4>-Wall</Level4>
      <EnableAllWarnings>-Wall -Wextra -Wformat=2</EnableAllWarnings>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="IncludeDirs">
      <MappingVariable>AdditionalIncludeDirectories</MappingVariable>
      <Flag>-I &quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Platform">
      <MappingVariable>Platform</MappingVariable>
      <x64>-m64</x64>
      <Win64>-m64</Win64>
      <x86>-m32</x86>
      <Win32>-m32</Win32>
    </GCCToolCompiler_Flags>
  </ItemGroup>
  
  <ItemGroup Condition="'$(GCCToolLinkerStyle)' == 'gnu'">
    <GCCToolLinker_Flags Include="Defaults">
      <Flag></Flag>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="IncludeDirs">
      <MappingVariable>AdditionalLibraryDirectories</MappingVariable>
      <Flag>-L&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="AdditionalOptions">
      <MappingVariable>AdditionalOptions</MappingVariable>
      <Flag>@{}</Flag>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="AdditionalDeps">
      <MappingVariable>AdditionalDependencies</MappingVariable>
      <Flag>@{;}</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="ConfigurationType">
      <MappingVariable>ConfigurationType</MappingVariable>
      <DynamicLibrary>-shared</DynamicLibrary>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="ObjectFiles">
      <MappingVariable>AllObjects</MappingVariable>
      <Flag>&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="Platform">
      <MappingVariable>Platform</MappingVariable>
      <TargetOS>$(TargetOS)</TargetOS>
      <x64>-m64</x64>
      <Win64>-m64</Win64>
      <x86>-m32</x86>
      <Win32>-m32</Win32>
    </GCCToolLinker_Flags>
  </ItemGroup>

  <ItemGroup Condition="'$(GCCToolArchiverStyle)' == 'gnu'">
    <GCCToolArchiver_Flags Include="Defaults">
      <Flag></Flag>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="IncludeDirs">
      <MappingVariable>AdditionalLibraryDirectories</MappingVariable>
      <Flag>-L&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="AdditionalOptions">
      <MappingVariable>AdditionalOptions</MappingVariable>
      <Flag>@{}</Flag>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="AdditionalDeps">
      <MappingVariable>AdditionalDependencies</MappingVariable>
      <Flag>-l@{;}</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="ConfigurationType">
      <MappingVariable>ConfigurationType</MappingVariable>
      <DynamicLibrary>-shared</DynamicLibrary>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="ObjectFiles">
      <MappingVariable>AllObjects</MappingVariable>
      <Flag>&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolArchiver_Flags>
  </ItemGroup>


  <PropertyGroup Condition="'$(GCCToolLinkerStyle)' == 'gnu'">
    <_gcc_tmpcmp_AllFlags>$Defaults $IncludeDirs $Preprocessor $Warnings $Optimization $Conformance $CompileAs $DebugInfo $ConfigurationType $Platform $AdditionalOptions</_gcc_tmpcmp_AllFlags>
    <GCCToolCompiler_AllFlagsDependency>$(_gcc_tmpcmp_AllFlags) -w -MM $SourceFile</GCCToolCompiler_AllFlagsDependency>
    <GCCToolCompiler_AllFlags>$(_gcc_tmpcmp_AllFlags) -c $SourceFile -o &quot;$OutputFile&quot;</GCCToolCompiler_AllFlags>
    <GCCToolLinker_AllFlags>$Defaults $ObjectFiles $IncludeDirs $ConfigurationType $Platform -o &quot;$OutputFile&quot; $AdditionalDeps $AdditionalOptions</GCCToolLinker_AllFlags>
    <GCCToolArchiver_AllFlags>rcs &quot;$OutputFile&quot; $Defaults $ObjectFiles $IncludeDirs $AdditionalDeps $ConfigurationType $AdditionalOptions</GCCToolArchiver_AllFlags>
  </PropertyGroup>
  
  <!-- LLVM Command Lines-->

  <ItemGroup Condition="'$(GCCToolCompilerStyle)' == 'llvm'">
    <GCCToolCompiler_Flags Include="Defaults">
      <Flag></Flag>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="ConfigurationType">
      <MappingVariable>ConfigurationType</MappingVariable>
      <DynamicLibrary>-fPIC</DynamicLibrary>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Preprocessor">
      <MappingVariable>PreprocessorDefinitions</MappingVariable>
      <Flag>-D@{;}</Flag>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="AdditionalOptions">
      <MappingVariable>AdditionalOptions</MappingVariable>
      <Flag>@{}</Flag>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Optimization">
      <MappingVariable>Optimization</MappingVariable>
      <Disabled></Disabled>
      <MinSpace>-Oz</MinSpace>
      <MaxSpeed>-O2</MaxSpeed>
      <Full>-O3</Full>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="DebugInfo">
      <MappingVariable>DebugInformationFormat</MappingVariable>
      <IsNullOrEmpty>-g0</IsNullOrEmpty>
      <None>-g0</None>
      <OldStyle>-g1</OldStyle>
      <OTHER>-g2 -gdwarf-2</OTHER>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="CompileAs">
      <MappingVariable>CompileAs</MappingVariable>
      <Flag></Flag>
      <CompileAsCpp>-x c++</CompileAsCpp>
      <CompileAsC>-x c</CompileAsC>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Conformance">
      <MappingVariable>ConformanceMode</MappingVariable>
      <Flag></Flag>
      <true>-fpermissive</true>
      <false></false>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Warnings">
      <MappingVariable>WarningLevel</MappingVariable>
      <Flag></Flag>
      <TurnOffAllWarnings>-w</TurnOffAllWarnings>
      <Level1>-Wall -Wno-comment -Wno-parentheses -Wno-missing-braces -Wno-write-strings -Wno-unknown-pragmas -Wno-attributes -Wformat=0</Level1>
      <Level2>-Wall -Wno-comment -Wno-parentheses -Wno-missing-braces -Wno-write-strings -Wno-unknown-pragmas -Wno-attributes -Wformat=0</Level2>
      <Level3>-Wall -Wno-comment -Wno-parentheses -Wno-missing-braces -Wno-write-strings -Wno-unknown-pragmas -Wno-attributes</Level3>
      <Level4>-Wall</Level4>
      <EnableAllWarnings>-Wall -Wextra -Wformat=2</EnableAllWarnings>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="IncludeDirs">
      <MappingVariable>AdditionalIncludeDirectories</MappingVariable>
      <Flag>-I &quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolCompiler_Flags>
    <GCCToolCompiler_Flags Include="Platform">
      <MappingVariable>Platform</MappingVariable>
      <x64>-m64</x64>
      <Win64>-m64</Win64>
      <x86>-m32</x86>
      <Win32>-m32</Win32>
    </GCCToolCompiler_Flags>
  
</ItemGroup>

  <ItemGroup Condition="'$(GCCToolLinkerStyle)' == 'llvm'">
    <GCCToolLinker_Flags Include="Defaults">
      <Flag></Flag>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="IncludeDirs">
      <MappingVariable>AdditionalLibraryDirectories</MappingVariable>
      <Flag>-L&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="AdditionalOptions">
      <MappingVariable>AdditionalOptions</MappingVariable>
      <Flag>@{}</Flag>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="AdditionalDeps">
      <MappingVariable>AdditionalDependencies</MappingVariable>
      <Flag>-l@{;}</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="ConfigurationType">
      <MappingVariable>ConfigurationType</MappingVariable>
      <DynamicLibrary>-shared</DynamicLibrary>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="ObjectFiles">
      <MappingVariable>AllObjects</MappingVariable>
      <Flag>&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolLinker_Flags>
    <GCCToolLinker_Flags Include="Platform">
      <MappingVariable>Platform</MappingVariable>
      <TargetOS>$(TargetOS)</TargetOS>
      <x64>-m64</x64>
      <Win64>-m64</Win64>
      <x86>-m32</x86>
      <Win32>-m32</Win32>
    </GCCToolLinker_Flags>
  </ItemGroup>

  <ItemGroup Condition="'$(GCCToolArchiverStyle)' == 'llvm'">
    <GCCToolArchiver_Flags Include="Defaults">
      <Flag></Flag>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="IncludeDirs">
      <MappingVariable>AdditionalLibraryDirectories</MappingVariable>
      <Flag>-L&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="AdditionalOptions">
      <MappingVariable>AdditionalOptions</MappingVariable>
      <Flag>@{}</Flag>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="AdditionalDeps">
      <MappingVariable>AdditionalDependencies</MappingVariable>
      <Flag>@{;}</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="ConfigurationType">
      <MappingVariable>ConfigurationType</MappingVariable>
      <DynamicLibrary>-shared</DynamicLibrary>
    </GCCToolArchiver_Flags>
    <GCCToolArchiver_Flags Include="ObjectFiles">
      <MappingVariable>AllObjects</MappingVariable>
      <Flag>&quot;@{;}&quot;</Flag>
      <Flag_WSLAware>true</Flag_WSLAware>
    </GCCToolArchiver_Flags>
  </ItemGroup>


  <PropertyGroup Condition="'$(GCCToolLinkerStyle)' == 'llvm'">
    <_gcc_tmpcmp_AllFlags>$Defaults $IncludeDirs $Preprocessor $Warnings $Optimization $Conformance $CompileAs $DebugInfo $ConfigurationType $Platform $AdditionalOptions</_gcc_tmpcmp_AllFlags>
    <GCCToolCompiler_AllFlagsDependency>$(_gcc_tmpcmp_AllFlags) -w -MM $SourceFile</GCCToolCompiler_AllFlagsDependency>
    <GCCToolCompiler_AllFlags>$(_gcc_tmpcmp_AllFlags) -c $SourceFile -o &quot;$OutputFile&quot;</GCCToolCompiler_AllFlags>
    <GCCToolLinker_AllFlags>$Defaults $ObjectFiles $IncludeDirs $ConfigurationType $AdditionalOptions $Platform -o &quot;$OutputFile&quot; $AdditionalDeps</GCCToolLinker_AllFlags>
    <GCCToolArchiver_AllFlags>rcs &quot;$OutputFile&quot; $Defaults $ObjectFiles $IncludeDirs $AdditionalDeps $ConfigurationType $AdditionalOptions</GCCToolArchiver_AllFlags>
  </PropertyGroup>

  <!-- Default values ConfigurationType Specific values -->  
  <ItemDefinitionGroup>
    <ClCompile>
      <TreatWarningAsError>false</TreatWarningAsError>    
      <PrecompiledHeader>NotUsing</PrecompiledHeader>    
      <PrecompiledHeaderOutputFileDirectory>$(IntDir)</PrecompiledHeaderOutputFileDirectory>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <Verbose>false</Verbose>
      <ConfigurationType>$(ConfigurationType)</ConfigurationType>
      <Platform>$(Platform)</Platform>
      <CompileAs>Default</CompileAs>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <Verbose>false</Verbose>
      <ConfigurationType>$(ConfigurationType)</ConfigurationType>
      <Platform>$(Platform)</Platform>
    </Link>
    <Lib>
      <Verbose>false</Verbose>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ConfigurationType>$(ConfigurationType)</ConfigurationType>
      <Platform>$(Platform)</Platform>
    </Lib>
</ItemDefinitionGroup>

  <PropertyGroup>
    <ExtensionsToDeleteOnClean Condition="'$(ExtensionsToDeleteOnClean)' == ''">*.o;*.a;*.so;*.lib;*.tracker;*.cdf;*.cache;*.obj;*.obj.enc;*.ilk;*.ipdb;*.iobj;*.resources;*.tlb;*.tli;*.tlh;*.tmp;*.rsp;*.pgc;*.pgd;*.meta;*.tlog;*.manifest;*.res;*.pch;*.exp;*.idb;*.rep;*.xdc;*.pdb;*_manifest.rc;*.bsc;*.sbr;*.xml;*.metagen;*.bi</ExtensionsToDeleteOnClean>
  </PropertyGroup>

  <ItemGroup>
    <!--  Unique items for the project-->
    <CustomBuildStep Include="$(ProjectName)" />
    <PreBuildEvent Include="$(ProjectName)" />
    <PreLinkEvent Include="$(ProjectName)" />
    <PostBuildEvent Include="$(ProjectName)" />
  </ItemGroup>
  

  </Project>
